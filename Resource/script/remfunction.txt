
function DrawSSSSMap()       --绘场景地图

	--lib.Debug(string.format("1:%d, 2:%d, 3:%d, 4:%d, 5:5d, 6:%d, 7:%d, 8:%d",
	--		JY.SubSceneX, JY.SubSceneY, JY.Base["人X1"], JY.Base["人Y1"], JY.S, JY.SubScene,JY.D, JY.MyPic))
	
	local rangeX=18+7;
	local rangeY=10+7;
	
	local i,j,i1,j1
	local x1,y1
	local picNum;
	local xx,yy;
	local j_2;
	
	lib.FillColor(0,0,0,0,0);    --清屏
	local xoff=JY.SubSceneX;
	local yoff=JY.SubSceneY;
	
	local dx=xoff+JY.Base["人X1"];
	local dy=yoff+JY.Base["人Y1"];
	local dd=CC.SWidth*CC.SHeight*2
	
	local tmpPicLoadCache=lib.PicLoadCache;         --用临时变量以加快速度。但似乎效果不大？
	local tmpget16=Byte.get16;
	local tmpS=JY.S;
	
	for j=-rangeY, 2*rangeX+rangeY do
		
		--lib.Debug("j:"..j)
		
		j_2=math.modf(j/2);
		
		--lib.Debug("j_2:"..j_2)
		
		local i_add=-rangeX+j_2
		--lib.Debug("i_add:"..i_add)
		
		for i=rangeX, 0, -1 do
		
			if 2*j_2==j then
				i1=i_add+i;
				j1=-i+j_2;
			else
				i1=i_add+i;
				j1=-i+j_2+1;
			end
			
			--lib.Debug("j1:"..j1)
			x1=CC.XScale*(i1-j1)+CC.ScreenW/2;
			y1=CC.YScale*(i1+j1)+CC.ScreenH/2;
			
			--lib.Debug("x1:"..x1)
			--lib.Debug("dx:"..dx)
			--lib.Debug("dy:"..dy)
			xx=dx+i1;
			yy=dy+j1;
			--lib.Debug(string.format("xx:%d, yy:%d, CC.SWidth:%d, CC.SHeight:%d", xx,yy,CC.SWidth,CC.SHeight))
			if yy >=0 and xx>=0 and xx <CC.SWidth and yy<CC.SHeight then
				--lib.Debug(string.format("xx:%d, yy:%d", xx, yy))
				local start=dd*(6*JY.SubScene)+(yy*CC.SWidth+xx)*2;
				--lib.Debug("start:"..start)
				local d0=tmpget16(tmpS,start);
				--lib.Debug("d0:"..d0)
				local d1=tmpget16(tmpS,start+dd);
				--lib.Debug("d1:"..d1)
				local d2=tmpget16(tmpS,start+2*dd);
				--lib.Debug("d2:"..d2)
				local d3=tmpget16(tmpS,start+3*dd);
				--lib.Debug("d3:"..d3)
				local d4=tmpget16(tmpS,start+4*dd);
				--lib.Debug("d4:"..d4)
				local d5=tmpget16(tmpS,start+5*dd);
				--lib.Debug("d5:"..d5)
				
				if d0>0 then
					tmpPicLoadCache(0,d0,x1,y1);     --地面
				end
				
				if d1>0 then
					tmpPicLoadCache(0,d1,x1,y1-d4);    --建筑
				end
				
				if d2>0 then
					tmpPicLoadCache(0,d2,x1,y1-d5);    --空中
				end
				
				if d3>=0 then
				
					local picnum=GetD(JY.SubScene,d3,7);
					
					if picnum>0 then
					  tmpPicLoadCache(0,picnum,x1,y1-d4);   --事件
					end
				end
				
				if i1==-xoff and j1==-yoff then             --绘主角贴图
					tmpPicLoadCache(0,JY.MyPic*2,x1,y1-d4);
				end
				
			end
			
		end
	end
end

function DtoSMaplua()          ---D*中的事件数据复制到S*中，同时处理动画效果。
	for i=0,CC.DNum-1 do
		local x=GetD(JY.SubScene,i,9);
		local y=GetD(JY.SubScene,i,10);
		if x>0 and y>0 then
			SetS(JY.SubScene,x,y,3,i);
		
			local p1=GetD(JY.SubScene,i,5);
			if p1>=0 then
				local p2=GetD(JY.SubScene,i,6);
				local p3=GetD(JY.SubScene,i,7);
				local delay=GetD(JY.SubScene,i,8);
				if p3<=p1 then     --动画已停止
					if JY.Mytick %100 > delay then
						p3=p3+1;
					end
				else
					if JY.Mytick % 4 ==0 then      --4个节拍动画增加一次
						p3=p3+1;
					end
				end
				if p3>p2 then
					p3=p1;
				end
				SetD(JY.SubScene,i,7,p3);
			end
		end
	end
end


--读S×数据, (x,y) 坐标，level 层 0-5
function GetS(id,x,y,level)       --读S×数据
    local start=(CC.SWidth*CC.SHeight*(6*id+level)+y*CC.SWidth+x)*2;
    return Byte.get16(JY.S,start);
end

--写S×
function SetS(id,x,y,level,v)       --写S×
    local start=(CC.SWidth*CC.SHeight*(6*id+level)+y*CC.SWidth+x)*2;
    Byte.set16(JY.S,start,v)
end



--读D*
--sceneid 场景编号，
--id D*编号
--要读第几个数据, 0-10
function GetD(Sceneid,id,i)          --读D*
    local start=(CC.DNum*11*Sceneid+11*id+i)*2
    local v=Byte.get16(JY.D,start);
    --lib.Debug(string.format("Sceneid:%d,id:%d,i:%d, D:%d, Nmu:%d, s:%d, v:%d",Sceneid,id,i,JY.D, CC.DNum, start, v))
    return v;
end

--写D×
function SetD(Sceneid,id,i,v)         --写D×
    local start=(CC.DNum*11*Sceneid+11*id+i)*2
    Byte.set16(JY.D,start,v);
end

function WaitKey()       --等待键盘输入
    local keyPress=-1;
    while true do
		keyPress=lib.GetKey();
		if keyPress ~=-1 then
	         break;
	    end
        lib.Delay(20);
	end
	return keyPress;
end